{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n  return node;\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(\n  // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element,\n  // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot ||\n  // DOM Element detected\n  node.parentNode || (\n  // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) ||\n  // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n  }\n\n  return {\n    ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList :\n  // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentNode = element;\n  let currentContainingBlockComputedStyle = null; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    if (computedStyle.position === 'static' && currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) && !isContainingBlock(currentNode)) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: {\n        ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","isWindow","value","document","location","alert","setInterval","getWindow","node","window","ownerDocument","defaultView","getComputedStyle","element","getNodeName","nodeName","toLowerCase","getUAString","uaData","navigator","userAgentData","brands","map","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","isElement","Element","isNode","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","min","Math","max","round","getBoundingClientRect","includeScale","isFixedStrategy","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","win","addVisualOffsets","x","left","visualViewport","offsetLeft","y","top","offsetTop","right","bottom","getDocumentElement","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","isScaled","rect","getRectRelativeToOffsetParent","offsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","_node$ownerDocument","scrollableAncestor","isBody","target","concat","updatedList","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","el","currentContainingBlockComputedStyle","computedStyle","ancestor","getClippingRect","boundary","rootBoundary","elementClippingAncestors","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getClientRects","Array","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","contextElement","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame"],"sources":["C:/Users/piotr/Desktop/studia/szkielety/client/clientrip/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentNode = element;\n  let currentContainingBlockComputedStyle = null; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n\n    if (computedStyle.position === 'static' && currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) && !isContainingBlock(currentNode)) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}