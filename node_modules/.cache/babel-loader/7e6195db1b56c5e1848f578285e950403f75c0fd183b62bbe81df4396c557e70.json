{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\studia\\\\szkielety\\\\client\\\\clientrip\\\\src\\\\components\\\\Myintencion\\\\Myintencion.js\";\nimport React, { Component } from \"react\";\nimport \"./Myintencion.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Myintencion extends Component {\n  constructor(props) {\n    super(props);\n    this.componentDidMount = () => {\n      axios.get(this.props.store.backendadress + '/inten/myintecion', {\n        params: {\n          Ovner: localStorage.getItem(\"id\")\n        }\n      }).then(res => {\n        if (res.data[0] !== undefined) {\n          let list = [];\n          console.log(res.data);\n          res.data.forEach(element => {\n            //console.log(element.massdate[0].Date_Of_even);\n            let date = element.massdate[0].Date_Of_even.slice(0, 10).split(\"-\").reverse().join(\"-\");\n            let time = element.massdate[0].Date_Of_even.slice(11, 16);\n            let pay = \"\";\n            let akcepted = \"\";\n            if (element.Accepted) {\n              akcepted = \"Zakceptowana\";\n            } else {\n              akcepted = \"Nie zaakceptowana\";\n            }\n            if (element.Paid_Off) {\n              pay = \"Opłacona\";\n            } else {\n              pay = \"Nie opłacona\";\n            }\n            list.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inteciondate\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"intecionspan\",\n                children: \"Data Mszy:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 84\n              }, this), \" \", date]\n            }, element._id + \"date\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inteciontime\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"intecionspan\",\n                children: \"Godzina Mszy:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 84\n              }, this), time]\n            }, element._id + \"time\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"intecionscribe\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"intecionspan\",\n                children: \"Tre\\u015B\\u0107 twojej intencji:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 88\n              }, this), element.Textintens]\n            }, element._id + \"scribe\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"intecionakcept\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"intecionspan\",\n                children: \"Czy zosta\\u0142a zaakceptowana:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 89\n              }, this), \" \", akcepted]\n            }, element._id + \"akcepted\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"intecionpayment\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"intecionspan\",\n                children: \"Status p\\u0142atno\\u015Bci:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 90\n              }, this), \" \", pay]\n            }, element._id + \"payment\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this));\n            if (!element.Paid_Off) {\n              list.push( /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonorderinencion\",\n                onClick: () => {\n                  this.handlepayforintencion(element._id);\n                },\n                children: \"Dokonaj ofiary za intencje\"\n              }, element._id + 999, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this));\n            }\n            this.setState({\n              listintension: list,\n              clienthaveintecion: true\n            });\n          });\n        }\n      });\n    };\n    this.handlepayforintencion = id => {\n      //get payment and save i local\n      console.log(id);\n      axios.get(this.props.store.backendadress + '/payment/checkpaymentid', {\n        params: {\n          Intention: id\n        }\n      }).then(res => {\n        console.log(res.data);\n      });\n    };\n    this.state = {\n      listintension: [],\n      clienthaveintecion: false\n    };\n    this.handlepayforintencion = this.handlepayforintencion.bind(this);\n  }\n  render() {\n    const {\n      clienthaveintecion,\n      listintension\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: clienthaveintecion ? [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intencionconteiner\",\n        children: listintension\n      }, 305, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 38\n      }, this)] : [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nullintecion\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scribenullintecion\",\n          children: \"Nie posiadasz \\u017Cadnych intencji \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/intencja\",\n          className: \"buttonorderinencion\",\n          children: \"Klikni by zam\\xF3wi\\u0107 intencje mszaln\\u0105\"\n        }, 304, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, 302, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 108\n      }, this)]\n    }, 301, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Myintencion;","map":{"version":3,"names":["React","Component","axios","Link","Myintencion","constructor","props","componentDidMount","get","store","backendadress","params","Ovner","localStorage","getItem","then","res","data","undefined","list","console","log","forEach","element","date","massdate","Date_Of_even","slice","split","reverse","join","time","pay","akcepted","Accepted","Paid_Off","push","_id","Textintens","handlepayforintencion","setState","listintension","clienthaveintecion","id","Intention","state","bind","render"],"sources":["C:/Users/piotr/Desktop/studia/szkielety/client/clientrip/src/components/Myintencion/Myintencion.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Myintencion.css\"\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass Myintencion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          listintension:[],\r\n          clienthaveintecion:false\r\n        }\r\n        this.handlepayforintencion = this.handlepayforintencion.bind(this);\r\n\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get(this.props.store.backendadress + '/inten/myintecion', { params: { Ovner: localStorage.getItem(\"id\") } })\r\n            .then(res => {\r\n                if(res.data[0]!==undefined){\r\n                    let list=[];\r\n                    console.log(res.data)\r\n                    res.data.forEach(element => {\r\n                        //console.log(element.massdate[0].Date_Of_even);\r\n                        let date=element.massdate[0].Date_Of_even.slice(0, 10).split(\"-\").reverse().join(\"-\");\r\n                        let time=element.massdate[0].Date_Of_even.slice(11, 16);\r\n                        let pay=\"\";\r\n                        let akcepted=\"\";\r\n                        \r\n\r\n                        if(element.Accepted)\r\n                        {\r\n                            akcepted=\"Zakceptowana\"\r\n                        }else{\r\n                            akcepted=\"Nie zaakceptowana\"\r\n                            \r\n                        }\r\n                        if(element.Paid_Off)\r\n                        {\r\n                            pay=\"Opłacona\"\r\n                        }else{\r\n                            pay=\"Nie opłacona\"\r\n                            \r\n                        }\r\n                       \r\n                        list.push(\r\n                            <div className=\"inteciondate\" key={element._id+\"date\"}><span className=\"intecionspan\">Data Mszy:</span> {date}</div>,\r\n                            <div className=\"inteciontime\" key={element._id+\"time\"}><span className=\"intecionspan\">Godzina Mszy:</span>{time}</div>,\r\n                            <div className=\"intecionscribe\" key={element._id+\"scribe\"}><span className=\"intecionspan\">Treść twojej intencji:</span>{element.Textintens}</div>,\r\n                            <div className=\"intecionakcept\"key={element._id+\"akcepted\"}><span className=\"intecionspan\">Czy została zaakceptowana:</span> {akcepted}</div>, \r\n                            <div className=\"intecionpayment\" key={element._id+\"payment\"}><span className=\"intecionspan\">Status płatności:</span> {pay}</div>,\r\n                            \r\n                        )\r\n                        if(!element.Paid_Off){\r\n                            list.push(\r\n                            <button className=\"buttonorderinencion\" onClick={() => {this.handlepayforintencion(element._id)}} key={element._id+999}>Dokonaj ofiary za intencje</button>\r\n                            )\r\n                        }\r\n                        this.setState({\r\n                            listintension:list,\r\n                           \r\n                            clienthaveintecion:true\r\n                        })\r\n                        \r\n                    });\r\n                }\r\n        \r\n            }\r\n            )\r\n    }\r\n    handlepayforintencion=(id)=>  {\r\n        //get payment and save i local\r\n        console.log(id);\r\n        axios.get(this.props.store.backendadress + '/payment/checkpaymentid', { params: { Intention: id } })\r\n            .then(res => {\r\n                console.log(res.data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const{clienthaveintecion,listintension}=this.state;\r\n\r\n        return (\r\n            <div key={301}>\r\n                {clienthaveintecion?[<div className=\"intencionconteiner\" key={305}>{listintension}</div>]:[<div className=\"nullintecion\" key={302}>\r\n                    <div className=\"scribenullintecion\" >Nie posiadasz żadnych intencji </div>\r\n                    <Link to=\"/intencja\" className=\"buttonorderinencion\" key={304}>\r\n                    Klikni by zamówić intencje mszalną\r\n                    </Link></div>]}\r\n                  \r\n                    \r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Myintencion"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}